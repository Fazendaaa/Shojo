name: shojo
on:
  push:
    branches:
      - 'master'
env:
  BINARY_NAME: shojo
  REPO_OWNER: shojo
  REPO_NAME: shojo

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64
          tags: fazenda/shojo-latex:latest
  release-linux-amd64:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: go test -v -p=1 -timeout=0 ./...
    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(basename ${GITHUB_REF}) >> ${GITHUB_ENV}
    - name: Set BUILD_TIME env
      run: echo BUILD_TIME=$(date --iso-8601=seconds) >> ${GITHUB_ENV}
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0
    - uses: wangyoucao577/go-release-action@v1.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        binary_name: "${{ env.BINARY_NAME }}"
        extra_files: LICENSE README.md
        ldflags: |
          -X "github.com/${{ env.REPO_OWNER }}/${{ env.NAME }}/integration/util/appversion.appVersion=${{ env.APP_VERSION }}"
          -X "github.com/${{ env.REPO_OWNER }}/${{ env.NAME }}/integration/util/appversion.buildTime=${{ env.BUILD_TIME }}"
          -X "github.com/${{ env.REPO_OWNER }}/${{ env.NAME }}/integration/util/appversion.gitCommit=${{ github.sha }}"
